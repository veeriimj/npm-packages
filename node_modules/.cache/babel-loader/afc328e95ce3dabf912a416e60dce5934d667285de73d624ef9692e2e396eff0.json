{"ast":null,"code":"var _jsxFileName = \"/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/JobSeeker/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles.scss';\nimport { getQuestionnaire } from '../../../../services/questionnaire/getQuestionnaire';\nimport { Question } from './components/Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ScreeningJobSeeker = props => {\n  _s();\n  const {\n    seekerId,\n    associationPublished\n  } = props;\n  const INVOCATION = 1;\n  const [questionnaires, setQuestionnaires] = useState({});\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    fetchQuestionaire();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const fetchQuestionaire = async () => {\n    const params = {\n      associationPublished: associationPublished,\n      invocation: INVOCATION,\n      seeker: seekerId\n    };\n    const resp = await getQuestionnaire(seekerId, params);\n    console.log(resp.data.data[0]);\n    console.log(resp.data.data[0].sections);\n    const questionsData = resp.data.data[0].sections[0].questions;\n    setQuestions(questionsData);\n    setQuestionnaires(resp.data.data[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobseeker-screening-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-heading\",\n      children: \"All mandatory Questions are marked with\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screening-questions-container\",\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n        question: question\n      }, question._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(ScreeningJobSeeker, \"2UAa/wNi2RomluoP6yVJ4tbUA3g=\");\n_c = ScreeningJobSeeker;\nvar _c;\n$RefreshReg$(_c, \"ScreeningJobSeeker\");","map":{"version":3,"names":["React","useEffect","useState","getQuestionnaire","Question","jsxDEV","_jsxDEV","ScreeningJobSeeker","props","_s","seekerId","associationPublished","INVOCATION","questionnaires","setQuestionnaires","questions","setQuestions","fetchQuestionaire","params","invocation","seeker","resp","console","log","data","sections","questionsData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","_id","_c","$RefreshReg$"],"sources":["/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/JobSeeker/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles.scss';\nimport { getQuestionnaire } from '../../../../services/questionnaire/getQuestionnaire';\nimport { Question } from './components/Question';\n\nexport const ScreeningJobSeeker = (props) => {\n    const { seekerId, associationPublished } = props;\n    const INVOCATION = 1;\n\n    const [questionnaires, setQuestionnaires] = useState({});\n    const [questions, setQuestions] = useState([]);\n\n    useEffect(() => {\n        fetchQuestionaire();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);  \n    \n    \n    const fetchQuestionaire = async () => {\n        const params = {\n            associationPublished: associationPublished,\n            invocation: INVOCATION, \n            seeker: seekerId,\n        }\n\n        const resp = await getQuestionnaire(seekerId, params);\n        console.log(resp.data.data[0]);\n        console.log(resp.data.data[0].sections);\n        const questionsData = resp.data.data[0].sections[0].questions;\n        setQuestions(questionsData);\n        setQuestionnaires(resp.data.data[0]);\n    };\n\n    return (\n        <div className='jobseeker-screening-container'>\n            <div className='container-heading'>\n                All mandatory Questions are marked with\n            </div>         \n            <div className='screening-questions-container'>\n                {questions.map((question) => (\n                    <Question key={question._id} question={question}/>\n                ))}\n            </div>   \n        </div>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,SAASC,gBAAgB,QAAQ,qDAAqD;AACtF,SAASC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC,QAAQ;IAAEC;EAAqB,CAAC,GAAGH,KAAK;EAChD,MAAMI,UAAU,GAAG,CAAC;EAEpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZgB,iBAAiB,CAAC,CAAC;IACvB;EACA,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,MAAM,GAAG;MACXP,oBAAoB,EAAEA,oBAAoB;MAC1CQ,UAAU,EAAEP,UAAU;MACtBQ,MAAM,EAAEV;IACZ,CAAC;IAED,MAAMW,IAAI,GAAG,MAAMlB,gBAAgB,CAACO,QAAQ,EAAEQ,MAAM,CAAC;IACrDI,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9BF,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC;IACvC,MAAMC,aAAa,GAAGL,IAAI,CAACG,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACV,SAAS;IAC7DC,YAAY,CAACU,aAAa,CAAC;IAC3BZ,iBAAiB,CAACO,IAAI,CAACG,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,oBACIlB,OAAA;IAAKqB,SAAS,EAAC,+BAA+B;IAAAC,QAAA,gBAC1CtB,OAAA;MAAKqB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAEnC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1B,OAAA;MAAKqB,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EACzCb,SAAS,CAACkB,GAAG,CAAEC,QAAQ,iBACpB5B,OAAA,CAACF,QAAQ;QAAoB8B,QAAQ,EAAEA;MAAS,GAAjCA,QAAQ,CAACC,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAvB,EAAA,CAxCYF,kBAAkB;AAAA6B,EAAA,GAAlB7B,kBAAkB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}