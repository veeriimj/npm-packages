{"ast":null,"code":"var _jsxFileName = \"/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/components/Tooltip/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import ReactTooltip from 'react-tooltip';\n// import { Tooltip as ReactTooltip } from 'react-tooltip'\n\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Tooltip = props => {\n  const options = {\n    className: ['tooltip', props.className || ''].join(' '),\n    effect: 'solid',\n    place: 'bottom',\n    backgroundColor: '#efefef',\n    textColor: '#2b2b2b',\n    multiline: true,\n    ...props.options,\n    id: props.id\n  };\n  if (props.getContent) {\n    options.getContent = props.getContent;\n  }\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    ...options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n_c = Tooltip;\nTooltip.propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.objectOf(PropTypes.string)\n};\nvar _c;\n$RefreshReg$(_c, \"Tooltip\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Tooltip","props","options","className","join","effect","place","backgroundColor","textColor","multiline","id","getContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","objectOf","$RefreshReg$"],"sources":["/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/components/Tooltip/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import ReactTooltip from 'react-tooltip';\n// import { Tooltip as ReactTooltip } from 'react-tooltip'\n\nimport './styles.scss';\n\nexport const Tooltip = props => {\n    const options = {\n        className: ['tooltip', props.className || ''].join(' '),\n        effect: 'solid',\n        place: 'bottom',\n        backgroundColor: '#efefef',\n        textColor: '#2b2b2b',\n        multiline: true,\n        ...props.options,\n        id: props.id,\n    };\n    if (props.getContent) {\n        options.getContent = props.getContent;\n    }\n    return <Tooltip {...options} />;\n};\n\nTooltip.propTypes = {\n    id: PropTypes.string.isRequired,\n    options: PropTypes.objectOf(PropTypes.string),\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC;AACA;;AAEA,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,OAAO,MAAMC,OAAO,GAAGC,KAAK,IAAI;EAC5B,MAAMC,OAAO,GAAG;IACZC,SAAS,EAAE,CAAC,SAAS,EAAEF,KAAK,CAACE,SAAS,IAAI,EAAE,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IACvDC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,QAAQ;IACfC,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE,SAAS;IACpBC,SAAS,EAAE,IAAI;IACf,GAAGR,KAAK,CAACC,OAAO;IAChBQ,EAAE,EAAET,KAAK,CAACS;EACd,CAAC;EACD,IAAIT,KAAK,CAACU,UAAU,EAAE;IAClBT,OAAO,CAACS,UAAU,GAAGV,KAAK,CAACU,UAAU;EACzC;EACA,oBAAOZ,OAAA,CAACC,OAAO;IAAA,GAAKE;EAAO;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACnC,CAAC;AAACC,EAAA,GAfWhB,OAAO;AAiBpBA,OAAO,CAACiB,SAAS,GAAG;EAChBP,EAAE,EAAEb,SAAS,CAACqB,MAAM,CAACC,UAAU;EAC/BjB,OAAO,EAAEL,SAAS,CAACuB,QAAQ,CAACvB,SAAS,CAACqB,MAAM;AAChD,CAAC;AAAC,IAAAF,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}