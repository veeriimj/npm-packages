{"ast":null,"code":"var _jsxFileName = \"/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/JobSeeker/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Question } from './components/Question';\nimport { Button } from '../../../components/Button';\nimport { Tooltip } from '../../../components/Tooltip';\nimport { getQuestionnaire } from '../../../../services/questionnaire/getQuestionnaire';\nimport './styles.scss';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ScreeningJobSeeker = ({\n  seekerId,\n  associationPublished\n}) => {\n  _s();\n  const INVOCATION = 1;\n  const [questionnaire, setQuestionnaire] = useState({});\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    fetchQuestionaire();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const fetchQuestionaire = async () => {\n    const params = {\n      associationPublished: associationPublished,\n      invocation: INVOCATION,\n      seeker: seekerId\n    };\n    const resp = await getQuestionnaire(seekerId, params);\n    const questionsData = resp.data.data[0].sections[0].questions;\n    setQuestions(questionsData);\n    setQuestionnaire(resp.data.data[0]);\n    const newAnswers = [];\n    for (const question of questionsData) {\n      const ans = question.answer || (question.type === 1 ? [] : '');\n      newAnswers.push(ans);\n    }\n    setAnswers(newAnswers);\n  };\n  const handleChange = (ans, questionNo) => {\n    let newAnswers = [...answers];\n    if (questions[questionNo - 1].type === 1) {\n      if (newAnswers[questionNo - 1].includes(ans)) {\n        newAnswers[questionNo - 1] = newAnswers[questionNo - 1].filter(val => val !== ans);\n      } else {\n        newAnswers[questionNo - 1].push(ans);\n      }\n    } else {\n      newAnswers[questionNo - 1] = ans;\n    }\n    setAnswers(newAnswers);\n  };\n  const handleSubmit = async () => {\n    try {\n      if (validate()) {\n        const data = formatAnswerData();\n        console.log(data);\n      }\n    } catch (error) {\n      console.log(error);\n      handleError();\n    }\n  };\n  const validate = () => {\n    const newErrors = [];\n    let flag = true;\n    for (let i = 0; i < questions.length; i++) {\n      const answer = answers[i];\n      if (questions[i].mandatory && (!answer && answer !== 0 || answer.length === 0)) {\n        newErrors.push('This is a mandatory question');\n        flag = false;\n      } else {\n        newErrors.push('');\n      }\n    }\n    setErrors(newErrors);\n    console.log(newErrors, flag);\n    return flag;\n  };\n  const formatAnswerData = () => {\n    const answerObj = [];\n    for (let i = 0; i < questions.length; i++) {\n      const answer = answers[i];\n      if ((answer || answer === 0) && answer.length > 0) {\n        answerObj.push({\n          id: questions[i]._id,\n          answer: answer\n        });\n      }\n    }\n    const data = {\n      questionnaireId: questionnaire._id,\n      seeker: seekerId,\n      assessedOn: new Date().toISOString(),\n      associationPublished: associationPublished,\n      invocation: INVOCATION,\n      sections: [{\n        id: 0,\n        questions: answerObj\n      }]\n    };\n    return data;\n  };\n  const mandatoryAnswered = () => {\n    for (let i = 0; i < questions.length; i++) {\n      const answer = answers[i];\n      if (questions[i].mandatory) {\n        if (!answer && answer !== 0 || answer.length === 0) return false;\n      }\n    }\n    return true;\n  };\n  if (!questions.length) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobseeker-screening-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-heading\",\n      children: \"Before you submit your application, tell the recruiter more about yourself\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-subheading\",\n      children: \"* Mandatory Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screening-questions-container\",\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(Question, {\n        question: question,\n        questionNum: index + 1,\n        handleChange: handleChange,\n        value: answers[index],\n        error: errors[index]\n      }, question._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submission-btn\",\n      \"data-tooltip-id\": \"screening-submission\",\n      \"data-tooltip-content\": mandatoryAnswered() ? '' : \"Please answer all the mandatory questions\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        theme: \"black-round\",\n        disabled: !mandatoryAnswered()\n        // dataTooltip=\"test message\"\n        ,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      id: \"screening-submission\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s(ScreeningJobSeeker, \"VZEbXOdyoFYc5e2vFysoh5Zv65o=\");\n_c = ScreeningJobSeeker;\nvar _c;\n$RefreshReg$(_c, \"ScreeningJobSeeker\");","map":{"version":3,"names":["React","useEffect","useState","Question","Button","Tooltip","getQuestionnaire","Fragment","_Fragment","jsxDEV","_jsxDEV","ScreeningJobSeeker","seekerId","associationPublished","_s","INVOCATION","questionnaire","setQuestionnaire","questions","setQuestions","answers","setAnswers","errors","setErrors","fetchQuestionaire","params","invocation","seeker","resp","questionsData","data","sections","newAnswers","question","ans","answer","type","push","handleChange","questionNo","includes","filter","val","handleSubmit","validate","formatAnswerData","console","log","error","handleError","newErrors","flag","i","length","mandatory","answerObj","id","_id","questionnaireId","assessedOn","Date","toISOString","mandatoryAnswered","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","questionNum","value","onClick","theme","disabled","_c","$RefreshReg$"],"sources":["/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/JobSeeker/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Question } from './components/Question';\nimport { Button } from '../../../components/Button';\nimport { Tooltip } from '../../../components/Tooltip';\nimport { getQuestionnaire } from '../../../../services/questionnaire/getQuestionnaire';\n\nimport './styles.scss';\n\nexport const ScreeningJobSeeker = ({ seekerId, associationPublished }) => {\n    const INVOCATION = 1;\n\n    const [questionnaire, setQuestionnaire] = useState({});\n    const [questions, setQuestions] = useState([]);\n    const [answers, setAnswers] = useState([]);\n    const [errors, setErrors] = useState([]);\n\n    useEffect(() => {\n        fetchQuestionaire();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);  \n    \n    \n    const fetchQuestionaire = async () => {\n        const params = {\n            associationPublished: associationPublished,\n            invocation: INVOCATION, \n            seeker: seekerId,\n        }\n\n        const resp = await getQuestionnaire(seekerId, params);\n        const questionsData = resp.data.data[0].sections[0].questions;\n        setQuestions(questionsData);\n        setQuestionnaire(resp.data.data[0]);\n        const newAnswers = [];\n\n        for (const question of questionsData) {\n            const ans = question.answer || (question.type === 1 ? [] : '');\n            newAnswers.push(ans);\n        }\n\n        setAnswers(newAnswers);\n    };\n\n    const handleChange = (ans, questionNo) => {\n        let newAnswers = [...answers];\n        if (questions[questionNo-1].type === 1) {\n            if (newAnswers[questionNo-1].includes(ans)) {\n                newAnswers[questionNo-1] = newAnswers[questionNo-1].filter((val) => val !== ans)\n            } else {\n                newAnswers[questionNo-1].push(ans);\n            }\n\n        } else {\n            newAnswers[questionNo-1] = ans;\n        }\n        setAnswers(newAnswers);\n\n    }\n\n    const handleSubmit = async () => {\n        try {\n            if (validate()) {\n                const data = formatAnswerData();\n                console.log(data);\n            \n            }\n        } catch (error) {\n            console.log(error);\n            handleError()\n        }\n    }\n\n\n    const validate = () => {\n        const newErrors = [];\n        let flag = true;\n        for (let i = 0; i < questions.length; i++) {\n            const answer = answers[i];\n            if (questions[i].mandatory && ((!answer && answer !== 0) || answer.length === 0)) {\n                newErrors.push('This is a mandatory question');\n                flag = false;\n            } else {\n                newErrors.push('');\n            }\n        }\n        setErrors(newErrors);\n        console.log(newErrors, flag);\n        return flag;\n    };\n\n    const formatAnswerData = () => {\n        const answerObj = [];\n        for (let i = 0; i < questions.length; i++) {\n            const answer = answers[i]\n            if ((answer || answer === 0) && answer.length > 0) {\n                answerObj.push({\n                    id: questions[i]._id,\n                    answer: answer\n                });\n            }\n        }\n\n        const data = {\n            questionnaireId: questionnaire._id,\n            seeker: seekerId,\n            assessedOn: new Date().toISOString(),\n            associationPublished: associationPublished,\n            invocation: INVOCATION,\n            sections: [\n                {\n                    id: 0,\n                    questions: answerObj\n                }\n            ]\n        };\n\n        return data;\n    };\n\n    const mandatoryAnswered = () => {\n        for (let i = 0; i < questions.length; i++) {\n            const answer = answers[i];\n            if (questions[i].mandatory) {\n                if ((!answer && answer !== 0) || answer.length === 0) return false;\n            }\n        }\n\n        return true;\n    }\n\n    if (!questions.length) {\n        return <></>;\n    }\n\n    return (\n        <div className='jobseeker-screening-container'>\n            <div className='container-heading'>\n                Before you submit your application, tell the recruiter more about yourself\n            </div>\n            <div className='container-subheading'>\n                * Mandatory Question\n            </div>\n            <div className='screening-questions-container'>\n                {questions.map((question, index) => (\n                    <Question \n                        key={question._id} \n                        question={question} \n                        questionNum={index+1} \n                        handleChange={handleChange}\n                        value={answers[index]}\n                        error={errors[index]}\n                    />\n                ))}\n            </div>\n            <div \n                className='submission-btn'\n                data-tooltip-id=\"screening-submission\"\n                data-tooltip-content={mandatoryAnswered() ? '' : \"Please answer all the mandatory questions\"}\n            >\n                <Button\n                    onClick={handleSubmit}\n                    theme='black-round'\n                    disabled={!mandatoryAnswered()}\n                    // dataTooltip=\"test message\"\n                >\n                    Next\n                </Button>\n            </div>\n\n            <Tooltip id=\"screening-submission\" />\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}