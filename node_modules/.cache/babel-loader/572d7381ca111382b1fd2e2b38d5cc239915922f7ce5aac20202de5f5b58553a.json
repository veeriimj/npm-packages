{"ast":null,"code":"import React,{useRef,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Checkbox}from'../../../../../components/Checkbox';import{Button}from'../../../../../components/Button';import{addQuestion}from'../../slice';import{useOutsideClickDetector}from'../../../../../../utils/useOutsideClickDetector';import'./styles.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PreviousQuestionsModal=props=>{const{handleClose,createQuestionnaire,updateQuestionnaire}=props;const modalRef=useRef(null);const previousQuestions=useSelector(state=>state.reducer.screening.previousQuestions);const questions=useSelector(state=>state.reducer.screening.questions);let questionnaireId=useSelector(state=>state.reducer.screening.questionnaireId);const dispatch=useDispatch();const addedQuestions=[];for(const question of questions){for(const prevQue of previousQuestions){if(question._id===prevQue._id){addedQuestions.push(question._id);}}}const[selectedQuestions,setSelectedQuestions]=useState([]);const[viewOptions,setViewOptions]=useState(Array.from({length:10},()=>false));useOutsideClickDetector(modalRef,handleClose);const toggleShowOptions=index=>{const viewOptionsTemp=[...viewOptions];viewOptionsTemp[index]=!viewOptionsTemp[index];setViewOptions(viewOptionsTemp);};const handleSelectQuestion=selectedQuestion=>{// screening can have maximum 10 question limit\nif(questions.length+selectedQuestions.length>=10){return;}// added question can't be unselected\nif(addedQuestions.includes(selectedQuestion._id)){return;}let selectedQuestionsTemp=[...selectedQuestions];if(selectedQuestionsTemp.includes(selectedQuestion._id)){selectedQuestionsTemp=selectedQuestionsTemp.filter(id=>id!==selectedQuestion._id);}else{selectedQuestionsTemp.push(selectedQuestion._id);}setSelectedQuestions(selectedQuestionsTemp);};const addSelectedQuestions=async()=>{if(!questionnaireId){const data=await createQuestionnaire();questionnaireId=data;}let questionIds=[];const questionsToAdd=[];for(const question of questions){questionIds.push(question._id);}questionIds=[...questionIds,...selectedQuestions];for(const ques of previousQuestions){if(selectedQuestions.includes(ques._id)){questionsToAdd.push(ques);}}await updateQuestionnaire(questionnaireId,questionIds);dispatch(addQuestion(questionsToAdd));handleClose();};return/*#__PURE__*/_jsxs(\"div\",{className:\"screening-previous-questions-modal-container modal-conainer\",ref:modalRef,children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-header\",children:\"Use previously added questions\"}),/*#__PURE__*/_jsx(\"div\",{className:\"previous-questions-section\",children:previousQuestions.map((question,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"previous-question-row\",children:[/*#__PURE__*/_jsx(Checkbox,{onClick:()=>handleSelectQuestion(question),checked:selectedQuestions.includes(question._id)||addedQuestions.includes(question._id),label:question.question,name:\"question\",id:\"\".concat(question._id),inputProps:{disabled:addedQuestions.includes(question._id)}}),question.type<3?/*#__PURE__*/_jsxs(\"div\",{className:\"option-block\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"screening-question-options-block\",children:/*#__PURE__*/_jsx(\"div\",{className:\"view-hide-option-toggle-btn\",onClick:()=>toggleShowOptions(index),children:viewOptions[index]?'Hide Options':'View Options'})}),/*#__PURE__*/_jsx(\"div\",{className:\"question-option-container \".concat(viewOptions[index]?'visible':''),style:{maxHeight:viewOptions[index]?23*question.answerOptions.length+'px':'0px'},children:(question.answerOptions||[]).map(option=>/*#__PURE__*/_jsx(\"div\",{className:\"single-option-row\",children:option}))})]}):null]},question._id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer-section\",children:[/*#__PURE__*/_jsx(Button,{onClick:addSelectedQuestions,type:\"primary\",classes:['screening-action-btn',!selectedQuestions.length?'disabled-btn':''],disabled:!selectedQuestions.length,children:\"Add Selected Questions\"}),/*#__PURE__*/_jsx(\"span\",{className:\"action-link\",onClick:handleClose,children:\"Cancel\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"added-question-count\",children:[\"Your Added Questions:\",' ',questions.length+selectedQuestions.length,\"/10\"]})]})]});};export default PreviousQuestionsModal;// if question is already selected, it should be checked and disabled\n// if num of total questions is 10 then no questions can be further selected","map":{"version":3,"names":["React","useRef","useState","useDispatch","useSelector","Checkbox","Button","addQuestion","useOutsideClickDetector","jsx","_jsx","jsxs","_jsxs","PreviousQuestionsModal","props","handleClose","createQuestionnaire","updateQuestionnaire","modalRef","previousQuestions","state","reducer","screening","questions","questionnaireId","dispatch","addedQuestions","question","prevQue","_id","push","selectedQuestions","setSelectedQuestions","viewOptions","setViewOptions","Array","from","length","toggleShowOptions","index","viewOptionsTemp","handleSelectQuestion","selectedQuestion","includes","selectedQuestionsTemp","filter","id","addSelectedQuestions","data","questionIds","questionsToAdd","ques","className","ref","children","map","onClick","checked","label","name","concat","inputProps","disabled","type","style","maxHeight","answerOptions","option","classes"],"sources":["/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/Recruiter/components/PreviousQuestions/index.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Checkbox } from '../../../../../components/Checkbox';\nimport { Button } from '../../../../../components/Button';\n\nimport { addQuestion } from '../../slice';\nimport { useOutsideClickDetector } from '../../../../../../utils/useOutsideClickDetector';\n\nimport './styles.scss';\n\nconst PreviousQuestionsModal = props => {\n    const { handleClose, createQuestionnaire, updateQuestionnaire } = props;\n    const modalRef = useRef(null);\n\n    const previousQuestions = useSelector(\n        state => state.reducer.screening.previousQuestions,\n    );\n    const questions = useSelector(state => state.reducer.screening.questions);\n    let questionnaireId = useSelector(\n        state => state.reducer.screening.questionnaireId,\n    );\n    const dispatch = useDispatch();\n    const addedQuestions = [];\n    for (const question of questions) {\n        for (const prevQue of previousQuestions) {\n            if (question._id === prevQue._id) {\n                addedQuestions.push(question._id);\n            }\n        }\n    }\n    const [selectedQuestions, setSelectedQuestions] = useState([]);\n    const [viewOptions, setViewOptions] = useState(\n        Array.from({ length: 10 }, () => false),\n    );\n\n    useOutsideClickDetector(modalRef, handleClose);\n\n    const toggleShowOptions = index => {\n        const viewOptionsTemp = [...viewOptions];\n        viewOptionsTemp[index] = !viewOptionsTemp[index];\n        setViewOptions(viewOptionsTemp);\n    };\n\n    const handleSelectQuestion = selectedQuestion => {\n        // screening can have maximum 10 question limit\n        if (questions.length + selectedQuestions.length >= 10) {\n            return;\n        }\n        // added question can't be unselected\n        if (addedQuestions.includes(selectedQuestion._id)) {\n            return;\n        }\n\n        let selectedQuestionsTemp = [...selectedQuestions];\n        if (selectedQuestionsTemp.includes(selectedQuestion._id)) {\n            selectedQuestionsTemp = selectedQuestionsTemp.filter(\n                id => id !== selectedQuestion._id,\n            );\n        } else {\n            selectedQuestionsTemp.push(selectedQuestion._id);\n        }\n\n        setSelectedQuestions(selectedQuestionsTemp);\n    };\n\n    const addSelectedQuestions = async () => {\n        if (!questionnaireId) {\n            const data = await createQuestionnaire();\n            questionnaireId = data;\n        }\n\n        let questionIds = [];\n        const questionsToAdd = [];\n\n        for (const question of questions) {\n            questionIds.push(question._id);\n        }\n\n        questionIds = [...questionIds, ...selectedQuestions];\n\n        for (const ques of previousQuestions) {\n            if (selectedQuestions.includes(ques._id)) {\n                questionsToAdd.push(ques);\n            }\n        }\n        await updateQuestionnaire(questionnaireId, questionIds);\n        dispatch(addQuestion(questionsToAdd));\n        handleClose();\n    };\n\n    return (\n        <div\n            className=\"screening-previous-questions-modal-container modal-conainer\"\n            ref={modalRef}\n        >\n            <div className=\"modal-header\">Use previously added questions</div>\n            <div className=\"previous-questions-section\">\n                {previousQuestions.map((question, index) => (\n                    <div className=\"previous-question-row\" key={question._id}>\n                        <Checkbox\n                            onClick={() => handleSelectQuestion(question)}\n                            checked={\n                                selectedQuestions.includes(question._id) ||\n                                addedQuestions.includes(question._id)\n                            }\n                            label={question.question}\n                            name=\"question\"\n                            id={`${question._id}`}\n                            inputProps={{\n                                disabled: addedQuestions.includes(question._id),\n                            }}\n                        />\n\n                        {question.type < 3 ? (\n                            <div className=\"option-block\">\n                                <div className=\"screening-question-options-block\">\n                                    <div\n                                        className=\"view-hide-option-toggle-btn\"\n                                        onClick={() => toggleShowOptions(index)}\n                                    >\n                                        {viewOptions[index]\n                                            ? 'Hide Options'\n                                            : 'View Options'}\n                                    </div>\n                                </div>\n                                <div\n                                    className={`question-option-container ${\n                                        viewOptions[index] ? 'visible' : ''\n                                    }`}\n                                    style={{\n                                        maxHeight: viewOptions[index]\n                                            ? 23 *\n                                                  question.answerOptions\n                                                      .length +\n                                              'px'\n                                            : '0px',\n                                    }}\n                                >\n                                    {(question.answerOptions || []).map(\n                                        option => (\n                                            <div className=\"single-option-row\">\n                                                {option}\n                                            </div>\n                                        ),\n                                    )}\n                                </div>\n                            </div>\n                        ) : null}\n                    </div>\n                ))}\n            </div>\n            <div className=\"footer-section\">\n                <Button\n                    onClick={addSelectedQuestions}\n                    type=\"primary\"\n                    classes={[\n                        'screening-action-btn',\n                        !selectedQuestions.length ? 'disabled-btn' : '',\n                    ]}\n                    disabled={!selectedQuestions.length}\n                >\n                    Add Selected Questions\n                </Button>\n                <span className=\"action-link\" onClick={handleClose}>\n                    Cancel\n                </span>\n                <span className=\"added-question-count\">\n                    Your Added Questions:{' '}\n                    {questions.length + selectedQuestions.length}/10\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default PreviousQuestionsModal;\n\n// if question is already selected, it should be checked and disabled\n// if num of total questions is 10 then no questions can be further selected\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}