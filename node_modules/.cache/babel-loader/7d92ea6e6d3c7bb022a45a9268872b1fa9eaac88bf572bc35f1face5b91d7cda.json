{"ast":null,"code":"var _jsxFileName = \"/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/JobSeeker/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './styles.scss';\nimport { getQuestionnaire } from '../../../../services/questionnaire/getQuestionnaire';\nimport { Question } from './components/Question';\nimport { Button } from '../../../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ScreeningJobSeeker = props => {\n  _s();\n  const {\n    seekerId,\n    associationPublished\n  } = props;\n  const INVOCATION = 1;\n  const [questionnaire, setQuestionnaire] = useState({});\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  useEffect(() => {\n    fetchQuestionaire();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const fetchQuestionaire = async () => {\n    const params = {\n      associationPublished: associationPublished,\n      invocation: INVOCATION,\n      seeker: seekerId\n    };\n    const resp = await getQuestionnaire(seekerId, params);\n    const questionsData = resp.data.data[0].sections[0].questions;\n    setQuestions(questionsData);\n    setQuestionnaire(resp.data.data[0]);\n    const newAnswers = [];\n    for (const question of questionsData) {\n      const ans = question.answer;\n      newAnswers.push(ans);\n    }\n    console.log(newAnswers);\n    setAnswers(newAnswers);\n  };\n  const handleChange = (ans, questionNo) => {\n    let newAnswers = answers;\n    if (questions[questionNo].type === 1) {\n      newAnswers[questionNo].push(ans);\n    } else {\n      newAnswers[questionNo] = ans;\n    }\n    setAnswers(newAnswers);\n  };\n  const handleSubmit = () => {\n    const questionnaireId = questionnaire._id;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobseeker-screening-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-heading\",\n      children: \"Before you submit your application, tell the recruiter more about yourself\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-subheading\",\n      children: \"* Mandatory Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screening-questions-container\",\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(Question, {\n        question: question,\n        questionNum: index + 1,\n        handleChange: true\n      }, question._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submission-section\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(ScreeningJobSeeker, \"hpROQiZleeABhkJhujQj+NTL5/A=\");\n_c = ScreeningJobSeeker;\nvar _c;\n$RefreshReg$(_c, \"ScreeningJobSeeker\");","map":{"version":3,"names":["React","useEffect","useState","getQuestionnaire","Question","Button","jsxDEV","_jsxDEV","ScreeningJobSeeker","props","_s","seekerId","associationPublished","INVOCATION","questionnaire","setQuestionnaire","questions","setQuestions","answers","setAnswers","fetchQuestionaire","params","invocation","seeker","resp","questionsData","data","sections","newAnswers","question","ans","answer","push","console","log","handleChange","questionNo","type","handleSubmit","questionnaireId","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","questionNum","onClick","_c","$RefreshReg$"],"sources":["/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/JobSeeker/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles.scss';\nimport { getQuestionnaire } from '../../../../services/questionnaire/getQuestionnaire';\nimport { Question } from './components/Question';\nimport { Button } from '../../../components/Button';\n\nexport const ScreeningJobSeeker = (props) => {\n    const { seekerId, associationPublished } = props;\n    const INVOCATION = 1;\n\n    const [questionnaire, setQuestionnaire] = useState({});\n    const [questions, setQuestions] = useState([]);\n    const [answers, setAnswers] = useState([]);\n\n    useEffect(() => {\n        fetchQuestionaire();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);  \n    \n    \n    const fetchQuestionaire = async () => {\n        const params = {\n            associationPublished: associationPublished,\n            invocation: INVOCATION, \n            seeker: seekerId,\n        }\n\n        const resp = await getQuestionnaire(seekerId, params);\n        const questionsData = resp.data.data[0].sections[0].questions;\n        setQuestions(questionsData);\n        setQuestionnaire(resp.data.data[0]);\n        const newAnswers = [];\n\n        for (const question of questionsData) {\n            const ans = question.answer;\n            newAnswers.push(ans);\n        }\n\n        console.log(newAnswers);\n        setAnswers(newAnswers);\n    };\n\n    const handleChange = (ans, questionNo) => {\n        let newAnswers = answers;\n        if (questions[questionNo].type === 1) {\n            newAnswers[questionNo].push(ans);\n        } else {\n            newAnswers[questionNo] = ans;\n        }\n        setAnswers(newAnswers);\n\n    }\n\n    const handleSubmit = () => {\n        const questionnaireId = questionnaire._id;\n    }\n\n    return (\n        <div className='jobseeker-screening-container'>\n            <div className='container-heading'>\n                Before you submit your application, tell the recruiter more about yourself\n            </div>\n            <div className='container-subheading'>\n                * Mandatory Question\n            </div>\n            <div className='screening-questions-container'>\n                {questions.map((question, index) => (\n                    <Question key={question._id} question={question} questionNum={index+1} handleChange />\n                ))}\n            </div>\n            <div className='submission-section'>\n                <Button\n                    onClick={handleSubmit}\n                \n                >\n                    Next\n                </Button>\n            </div>  \n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}