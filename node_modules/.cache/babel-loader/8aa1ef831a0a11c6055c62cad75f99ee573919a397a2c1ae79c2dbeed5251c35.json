{"ast":null,"code":"var _jsxFileName = \"/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/components/Tooltip/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip as ReactTooltip } from 'react-tooltip';\nimport 'react-tooltip/dist/react-tooltip.css';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Tooltip = props => {\n  const options = {\n    className: ['tooltip', props.className || ''].join(' '),\n    classNameArrow: 'tooltip-arrow',\n    effect: 'solid',\n    place: 'bottom-start',\n    variant: 'info',\n    // offset: 100,\n    // backgroundColor: '#efefef',\n    // textColor: '#333',\n    // fontFamily: 'Poppins',\n    // borderRadius: '12.68px',\n    // backgroundColor: '#CBD5E1',\n    backgroundColor: '#efefef',\n    textColor: '#2b2b2b',\n    multiline: true,\n    ...props.options,\n    id: props.id\n  };\n  if (props.getContent) {\n    options.getContent = props.getContent;\n  }\n  return /*#__PURE__*/_jsxDEV(ReactTooltip, {\n    ...options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n};\n_c = Tooltip;\nTooltip.propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.objectOf(PropTypes.string)\n};\nvar _c;\n$RefreshReg$(_c, \"Tooltip\");","map":{"version":3,"names":["React","PropTypes","Tooltip","ReactTooltip","jsxDEV","_jsxDEV","props","options","className","join","classNameArrow","effect","place","variant","backgroundColor","textColor","multiline","id","getContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","objectOf","$RefreshReg$"],"sources":["/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/components/Tooltip/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip as ReactTooltip } from 'react-tooltip'\nimport 'react-tooltip/dist/react-tooltip.css'\nimport './styles.scss';\n\nexport const Tooltip = props => {\n    const options = {\n        className: ['tooltip', props.className || ''].join(' '),\n        classNameArrow: 'tooltip-arrow',\n        effect: 'solid',\n        place: 'bottom-start',\n        variant: 'info',\n        // offset: 100,\n        // backgroundColor: '#efefef',\n        // textColor: '#333',\n        // fontFamily: 'Poppins',\n        // borderRadius: '12.68px',\n        // backgroundColor: '#CBD5E1',\n        backgroundColor: '#efefef',\n        textColor: '#2b2b2b',\n        multiline: true,\n        ...props.options,\n        id: props.id,\n    };\n    if (props.getContent) {\n        options.getContent = props.getContent;\n    }\n    return <ReactTooltip {...options} />;\n};\n\nTooltip.propTypes = {\n    id: PropTypes.string.isRequired,\n    options: PropTypes.objectOf(PropTypes.string),\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,IAAIC,YAAY,QAAQ,eAAe;AACvD,OAAO,sCAAsC;AAC7C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,OAAO,MAAMH,OAAO,GAAGI,KAAK,IAAI;EAC5B,MAAMC,OAAO,GAAG;IACZC,SAAS,EAAE,CAAC,SAAS,EAAEF,KAAK,CAACE,SAAS,IAAI,EAAE,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IACvDC,cAAc,EAAE,eAAe;IAC/BC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,cAAc;IACrBC,OAAO,EAAE,MAAM;IACf;IACA;IACA;IACA;IACA;IACA;IACAC,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE,SAAS;IACpBC,SAAS,EAAE,IAAI;IACf,GAAGV,KAAK,CAACC,OAAO;IAChBU,EAAE,EAAEX,KAAK,CAACW;EACd,CAAC;EACD,IAAIX,KAAK,CAACY,UAAU,EAAE;IAClBX,OAAO,CAACW,UAAU,GAAGZ,KAAK,CAACY,UAAU;EACzC;EACA,oBAAOb,OAAA,CAACF,YAAY;IAAA,GAAKI;EAAO;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACxC,CAAC;AAACC,EAAA,GAvBWrB,OAAO;AAyBpBA,OAAO,CAACsB,SAAS,GAAG;EAChBP,EAAE,EAAEhB,SAAS,CAACwB,MAAM,CAACC,UAAU;EAC/BnB,OAAO,EAAEN,SAAS,CAAC0B,QAAQ,CAAC1B,SAAS,CAACwB,MAAM;AAChD,CAAC;AAAC,IAAAF,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}