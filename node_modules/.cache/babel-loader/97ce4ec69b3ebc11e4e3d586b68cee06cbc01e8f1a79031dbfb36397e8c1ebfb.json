{"ast":null,"code":"var _jsxFileName = \"/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/JobSeeker/components/Question/index.jsx\";\nimport React from 'react';\nimport './styles.scss';\nimport { Checkbox } from '../../../../../components/Checkbox';\nimport { Radio } from '../../../../../components/Radio';\nimport { TextArea } from '../../../../../components/TextArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questionTypeMap = {\n  1: 'Multi',\n  2: 'Single',\n  3: 'Yes/No',\n  4: 'Short',\n  5: 'Long'\n};\nconst LongAnswerQuestion = ({\n  id,\n  question,\n  questionNum,\n  mandatory,\n  handleChange,\n  value\n}) => {\n  const onChange = val => {\n    handleChange(val, questionNum);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"long-answer-question-container\",\n    id: id,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `question-text ${mandatory ? 'mandatory' : ''}`,\n      children: [questionNum, \" \", '. ', question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n      value: value,\n      handleChange: onChange,\n      maxLength: 2000,\n      placeholder: \"Enter your answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), mandatory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"validation-error\",\n      children: \"This is a mandatory question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"remaining-character\",\n      children: [2000 - value.length, \" characters left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = LongAnswerQuestion;\nexport const Question = props => {\n  const {\n    question,\n    questionNum,\n    handleChange,\n    value\n  } = props;\n  const handleClick = ev => {\n    console.log(ev.target);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screening-question-container\",\n    children: questionTypeMap[question.type] === 'Multi' ? /*#__PURE__*/_jsxDEV(MultiAnswerQuestion, {\n      id: question._id,\n      question: question.question,\n      answerOptions: question.answerOptions,\n      questionNum: questionNum,\n      mandatory: question.mandatory,\n      value: value,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : questionTypeMap[question.type] === 'Single' ? /*#__PURE__*/_jsxDEV(SingleAnswerQuestion, {\n      id: question._id,\n      question: question.question,\n      answerOptions: question.answerOptions,\n      questionNum: questionNum,\n      mandatory: question.mandatory,\n      value: value,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : questionTypeMap[question.type] === 'Yes/No' ? /*#__PURE__*/_jsxDEV(YesNoQuestion, {\n      id: question._id,\n      question: question.question,\n      questionNum: questionNum,\n      mandatory: question.mandatory,\n      value: value,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this) : questionTypeMap[question.type] === 'Short' ? /*#__PURE__*/_jsxDEV(ShortAnswerQuestion, {\n      id: question._id,\n      question: question.question,\n      questionNum: questionNum,\n      mandatory: question.mandatory,\n      value: value,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this) : questionTypeMap[question.type] === 'Long' ? /*#__PURE__*/_jsxDEV(LongAnswerQuestion, {\n      id: question._id,\n      question: question.question,\n      questionNum: questionNum,\n      mandatory: question.mandatory,\n      value: value,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Question;\nvar _c, _c2;\n$RefreshReg$(_c, \"LongAnswerQuestion\");\n$RefreshReg$(_c2, \"Question\");","map":{"version":3,"names":["React","Checkbox","Radio","TextArea","jsxDEV","_jsxDEV","questionTypeMap","LongAnswerQuestion","id","question","questionNum","mandatory","handleChange","value","onChange","val","className","children","fileName","_jsxFileName","lineNumber","columnNumber","maxLength","placeholder","length","_c","Question","props","handleClick","ev","console","log","target","type","MultiAnswerQuestion","_id","answerOptions","SingleAnswerQuestion","YesNoQuestion","ShortAnswerQuestion","_c2","$RefreshReg$"],"sources":["/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/JobSeeker/components/Question/index.jsx"],"sourcesContent":["import React from 'react';\nimport './styles.scss';\nimport { Checkbox } from '../../../../../components/Checkbox';\nimport { Radio } from '../../../../../components/Radio';\nimport { TextArea } from '../../../../../components/TextArea';\n\nconst questionTypeMap = {\n    1: 'Multi',\n    2: 'Single',\n    3: 'Yes/No',\n    4: 'Short',\n    5: 'Long',\n}\n\n\n\n\n\n\n\n\n\nconst LongAnswerQuestion = ( { id, question, questionNum, mandatory, handleChange, value }) => {\n    const onChange = (val) => {\n        handleChange(val, questionNum)\n    }\n\n    return (\n        <div className='long-answer-question-container' id={id}>\n            <div className={`question-text ${mandatory ? 'mandatory' : ''}`}>{questionNum} {'. '}{question}</div>\n            <TextArea \n                value={value}\n                handleChange={onChange}\n                maxLength={2000}\n                placeholder=\"Enter your answer\"\n            />\n            {mandatory && \n                <div className='validation-error'>\n                    This is a mandatory question\n                </div>\n            }\n            <div className='remaining-character'>{2000-value.length} characters left</div>\n        </div>\n    );\n};\n\nexport const Question = (props) => {\n    const { question, questionNum, handleChange, value } = props;\n\n    const handleClick = (ev) => {\n        console.log(ev.target);\n    }\n\n    return (\n        <div className='screening-question-container'>\n            {questionTypeMap[question.type] === 'Multi' ? (\n                <MultiAnswerQuestion \n                    id={question._id}\n                    question={question.question}\n                    answerOptions={question.answerOptions}\n                    questionNum={questionNum}\n                    mandatory={question.mandatory}\n                    value={value}\n                    handleChange={handleChange}\n                />\n            ) : \n            questionTypeMap[question.type] === 'Single' ? (\n                <SingleAnswerQuestion\n                    id={question._id}\n                    question={question.question}\n                    answerOptions={question.answerOptions}\n                    questionNum={questionNum}\n                    mandatory={question.mandatory}\n                    value={value}\n                    handleChange={handleChange}\n                />\n            )\n            :\n            questionTypeMap[question.type] === 'Yes/No' ? (\n                <YesNoQuestion\n                    id={question._id}\n                    question={question.question}\n                    questionNum={questionNum}\n                    mandatory={question.mandatory}\n                    value={value}\n                    handleChange={handleChange}\n                />\n            )\n            :\n            questionTypeMap[question.type] === 'Short' ? (\n                <ShortAnswerQuestion\n                    id={question._id}\n                    question={question.question}\n                    questionNum={questionNum}\n                    mandatory={question.mandatory}\n                    value={value}\n                    handleChange={handleChange}\n                />\n            )\n            :\n            questionTypeMap[question.type] === 'Long' ? (\n                <LongAnswerQuestion\n                    id={question._id}\n                    question={question.question}\n                    questionNum={questionNum}\n                    mandatory={question.mandatory}\n                    value={value}\n                    handleChange={handleChange}\n                />\n            ):\n            null\n            }\n        </div>  \n    );\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}