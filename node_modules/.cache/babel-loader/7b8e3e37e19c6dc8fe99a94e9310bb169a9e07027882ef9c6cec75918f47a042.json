{"ast":null,"code":"var _jsxFileName = \"/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/JobSeeker/components/Question/index.jsx\";\nimport React from 'react';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questionTypeMap = {\n  1: 'Multi',\n  2: 'Single',\n  3: 'Yes/No',\n  4: 'Short',\n  5: 'Long'\n};\nexport const Question = props => {\n  const {\n    question,\n    questionNum,\n    handleChange,\n    value\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screening-question-container\",\n    children: questionTypeMap[question.type] === 'Multi' ? /*#__PURE__*/_jsxDEV(MultiAnswerQuestion, {\n      id: question._id,\n      question: question.question,\n      answerOptions: question.answerOptions,\n      questionNum: questionNum,\n      mandatory: question.mandatory,\n      value: value,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : questionTypeMap[question.type] === 'Single' ? /*#__PURE__*/_jsxDEV(SingleAnswerQuestion, {\n      id: question._id,\n      question: question.question,\n      answerOptions: question.answerOptions,\n      questionNum: questionNum,\n      mandatory: question.mandatory,\n      value: value,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : questionTypeMap[question.type] === 'Yes/No' ? /*#__PURE__*/_jsxDEV(YesNoQuestion, {\n      id: question._id,\n      question: question.question,\n      questionNum: questionNum,\n      mandatory: question.mandatory,\n      value: value,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : questionTypeMap[question.type] === 'Short' ? /*#__PURE__*/_jsxDEV(ShortAnswerQuestion, {\n      id: question._id,\n      question: question.question,\n      questionNum: questionNum,\n      mandatory: question.mandatory,\n      value: value,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : questionTypeMap[question.type] === 'Long' ? /*#__PURE__*/_jsxDEV(LongAnswerQuestion, {\n      id: question._id,\n      question: question.question,\n      questionNum: questionNum,\n      mandatory: question.mandatory,\n      value: value,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","questionTypeMap","Question","props","question","questionNum","handleChange","value","className","children","type","MultiAnswerQuestion","id","_id","answerOptions","mandatory","fileName","_jsxFileName","lineNumber","columnNumber","SingleAnswerQuestion","YesNoQuestion","ShortAnswerQuestion","LongAnswerQuestion","_c","$RefreshReg$"],"sources":["/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/JobSeeker/components/Question/index.jsx"],"sourcesContent":["import React from 'react';\nimport './styles.scss';\n\nconst questionTypeMap = {\n    1: 'Multi',\n    2: 'Single',\n    3: 'Yes/No',\n    4: 'Short',\n    5: 'Long',\n}\n\n\n\n\n\n\n\n\n\n\n\nexport const Question = (props) => {\n    const { question, questionNum, handleChange, value } = props;\n\n    return (\n        <div className='screening-question-container'>\n            {questionTypeMap[question.type] === 'Multi' ? (\n                <MultiAnswerQuestion \n                    id={question._id}\n                    question={question.question}\n                    answerOptions={question.answerOptions}\n                    questionNum={questionNum}\n                    mandatory={question.mandatory}\n                    value={value}\n                    handleChange={handleChange}\n                />\n            ) : \n            questionTypeMap[question.type] === 'Single' ? (\n                <SingleAnswerQuestion\n                    id={question._id}\n                    question={question.question}\n                    answerOptions={question.answerOptions}\n                    questionNum={questionNum}\n                    mandatory={question.mandatory}\n                    value={value}\n                    handleChange={handleChange}\n                />\n            )\n            :\n            questionTypeMap[question.type] === 'Yes/No' ? (\n                <YesNoQuestion\n                    id={question._id}\n                    question={question.question}\n                    questionNum={questionNum}\n                    mandatory={question.mandatory}\n                    value={value}\n                    handleChange={handleChange}\n                />\n            )\n            :\n            questionTypeMap[question.type] === 'Short' ? (\n                <ShortAnswerQuestion\n                    id={question._id}\n                    question={question.question}\n                    questionNum={questionNum}\n                    mandatory={question.mandatory}\n                    value={value}\n                    handleChange={handleChange}\n                />\n            )\n            :\n            questionTypeMap[question.type] === 'Long' ? (\n                <LongAnswerQuestion\n                    id={question._id}\n                    question={question.question}\n                    questionNum={questionNum}\n                    mandatory={question.mandatory}\n                    value={value}\n                    handleChange={handleChange}\n                />\n            ):\n            null\n            }\n        </div>  \n    );\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}