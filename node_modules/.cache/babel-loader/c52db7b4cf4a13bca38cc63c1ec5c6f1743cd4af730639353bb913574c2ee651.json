{"ast":null,"code":"var _jsxFileName = \"/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/Recruiter/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport AddQuestionModal from \"./components/AddQuestion\";\nimport { rearrangeQuestion, setBasicInfo, setPreviousQuestions, setQuestionnaireId, setQuestions } from './slice';\nimport { addQuestionnaire } from '../../../../services/questionnaire/addQuestionnaire';\nimport { updateQuestionnaire } from '../../../../services/questionnaire/updateQuestionnaire';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ScreeningRecruiter(props) {\n  _s();\n  const {\n    jobId,\n    userId,\n    userType\n  } = props;\n  const [showAddQuestionModal, setShowAddQuestionModal] = useState(false);\n  const [showPrevQuestionsModal, setShowPrevQuestionsModal] = useState(false);\n  const dispatch = useDispatch();\n  const invocation = useSelector(state => state.screeningReducer.invocation);\n  const name = useSelector(state => state.screeningReducer.name);\n  const questions = useSelector(state => state.screeningReducer.questions);\n  const questionnaireId = useSelector(state => state.screeningReducer.questionnaireId);\n  const previousQuestions = useSelector(state => state.screeningReducer.previousQuestions);\n  const createQuestionnaire = async () => {\n    const data = {\n      author: userId,\n      authorType: userType,\n      invocation: invocation,\n      name: name,\n      sections: [{\n        type: 'static',\n        questionIds: []\n      }]\n    };\n    if (jobId) {\n      data['associationMeta'] = jobId;\n    }\n    try {\n      const response = await addQuestionnaire(userId, data);\n      dispatch(setQuestionnaireId(response['data']['data']._id));\n      return response['data']['data'];\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const updateCurrentQuestionnaire = async (questionnaireId, questionIds) => {\n    const data = {\n      sections: [{\n        type: 'static',\n        questionIds: questionIds\n      }]\n    };\n    try {\n      const response = await updateQuestionnaire(userId, questionnaireId, data);\n      return response['data']['data'];\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screening-modal-container\",\n    children: showAddQuestionModal && /*#__PURE__*/_jsxDEV(AddQuestionModal, {\n      handleClose: () => setShowAddQuestionModal(false),\n      createQuestionnaire: createQuestionnaire,\n      updateQuestionnaire: updateCurrentQuestionnaire,\n      questionDetails: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(ScreeningRecruiter, \"11imkctCq6mbVICbuqAIr46uO9M=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = ScreeningRecruiter;\nvar _c;\n$RefreshReg$(_c, \"ScreeningRecruiter\");","map":{"version":3,"names":["React","useState","Provider","useDispatch","useSelector","AddQuestionModal","rearrangeQuestion","setBasicInfo","setPreviousQuestions","setQuestionnaireId","setQuestions","addQuestionnaire","updateQuestionnaire","jsxDEV","_jsxDEV","ScreeningRecruiter","props","_s","jobId","userId","userType","showAddQuestionModal","setShowAddQuestionModal","showPrevQuestionsModal","setShowPrevQuestionsModal","dispatch","invocation","state","screeningReducer","name","questions","questionnaireId","previousQuestions","createQuestionnaire","data","author","authorType","sections","type","questionIds","response","_id","error","console","log","updateCurrentQuestionnaire","className","children","handleClose","questionDetails","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/Recruiter/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\n\nimport AddQuestionModal from \"./components/AddQuestion\";\n\nimport {\n  rearrangeQuestion,\n  setBasicInfo,\n  setPreviousQuestions,\n  setQuestionnaireId,\n  setQuestions,\n} from './slice';\n\nimport { addQuestionnaire } from '../../../../services/questionnaire/addQuestionnaire';\nimport { updateQuestionnaire } from '../../../../services/questionnaire/updateQuestionnaire';\n\nexport function ScreeningRecruiter(props) {\n\n  const { jobId, userId, userType } = props;\n  const [showAddQuestionModal, setShowAddQuestionModal] = useState(false);\n  const [showPrevQuestionsModal, setShowPrevQuestionsModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const invocation = useSelector(state => state.screeningReducer.invocation);\n  const name = useSelector(state => state.screeningReducer.name);\n  const questions = useSelector(state => state.screeningReducer.questions);\n  const questionnaireId = useSelector(\n    state => state.screeningReducer.questionnaireId,\n  );\n  const previousQuestions = useSelector(\n    state => state.screeningReducer.previousQuestions,\n  );\n\n  const createQuestionnaire = async () => {\n    const data = {\n      author: userId,\n      authorType: userType,\n      invocation: invocation,\n      name: name,\n      sections: [{ type: 'static', questionIds: [] }],\n    };\n\n    if (jobId) {\n      data['associationMeta'] = jobId;\n    }\n    try {\n      const response = await addQuestionnaire(userId, data);\n      dispatch(setQuestionnaireId(response['data']['data']._id));\n      return response['data']['data'];\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateCurrentQuestionnaire = async (questionnaireId, questionIds) => {\n    const data = {\n      sections: [{ type: 'static', questionIds: questionIds }],\n    };\n\n    try {\n      const response = await updateQuestionnaire(\n        userId,\n        questionnaireId,\n        data,\n      );\n      return response['data']['data'];\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"screening-modal-container\">\n      {showAddQuestionModal && (\n        <AddQuestionModal\n          handleClose={() =>\n            setShowAddQuestionModal(false)\n          }\n          createQuestionnaire={createQuestionnaire}\n          updateQuestionnaire={\n            updateCurrentQuestionnaire\n          }\n          questionDetails\n        />\n      )}\n    </div>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}