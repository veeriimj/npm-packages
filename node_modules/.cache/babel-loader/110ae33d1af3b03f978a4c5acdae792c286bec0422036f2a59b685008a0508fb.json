{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export const initialState={questionnaireId:null,questions:[],previousQuestions:[],userId:null,userType:null,jobId:null,name:'screening',invocation:1};const screeningSlice=createSlice({name:'screeningSlice',initialState,reducers:{addQuestion:(state,action)=>{state.questions=[...state.questions,...action.payload];},editQuestion:(state,action)=>{for(let i=0;i<state.questions.length;i++){if(state.questions[i]._id===action.payload.oldId){state.questions[i]=action.payload.data;}}},removeQuestion:(state,action)=>{state.questions=state.questions.filter(question=>question._id!==action.payload);},setQuestions:(state,action)=>{state.questions=action.payload;},rearrangeQuestion:(state,action)=>{const{id1,id2}=action.payload;let questions=state.questions;console.log(1,questions);let selectedQuestion=questions[id1];if(id2<id1){questions.splice(id2,0,selectedQuestion);questions.splice(id1+1,1);}else{questions.splice(id2+1,0,selectedQuestion);questions.splice(id1,1);}console.log(1,questions);state.questions=questions;},setPreviousQuestions(state,action){state.previousQuestions=action.payload;},setQuestionnaireId:(state,action)=>{state.questionnaireId=action.payload;},setBasicInfo:(state,action)=>{state.jobId=action.payload.jobId;state.userId=action.payload.userId;state.userType=action.payload.userType;}}});export const{addQuestion,editQuestion,removeQuestion,setQuestions,rearrangeQuestion,setPreviousQuestions,setQuestionnaireId,setBasicInfo}=screeningSlice.actions;export default screeningSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","questionnaireId","questions","previousQuestions","userId","userType","jobId","name","invocation","screeningSlice","reducers","addQuestion","state","action","payload","editQuestion","i","length","_id","oldId","data","removeQuestion","filter","question","setQuestions","rearrangeQuestion","id1","id2","console","log","selectedQuestion","splice","setPreviousQuestions","setQuestionnaireId","setBasicInfo","actions","reducer"],"sources":["/home/fa065132/GitHub/assessment-web/assessment-web-react/src/app/containers/Screening/Recruiter/slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const initialState = {\n    questionnaireId: null,\n    questions: [],\n    previousQuestions: [],\n    userId: null,\n    userType: null,\n    jobId: null,\n    name: 'screening',\n    invocation: 1,\n};\n\nconst screeningSlice = createSlice({\n    name: 'screeningSlice',\n    initialState,\n    reducers: {\n        addQuestion: (state, action) => {\n            state.questions = [...state.questions, ...action.payload];\n        },\n\n        editQuestion: (state, action) => {\n            for (let i = 0; i < state.questions.length; i++) {\n                if (state.questions[i]._id === action.payload.oldId) {\n                    state.questions[i] = action.payload.data;\n                }\n            }\n        },\n\n        removeQuestion: (state, action) => {\n            state.questions = state.questions.filter(\n                question => question._id !== action.payload,\n            );\n        },\n\n        setQuestions: (state, action) => {\n            state.questions = action.payload;\n        },\n\n        rearrangeQuestion: (state, action) => {\n            const { id1, id2 } = action.payload;\n            let questions = state.questions;\n            console.log(1, questions);\n            let selectedQuestion = questions[id1];\n            if (id2 < id1) {\n                questions.splice(id2, 0, selectedQuestion);\n                questions.splice(id1 + 1, 1);\n            } else {\n                questions.splice(id2 + 1, 0, selectedQuestion);\n                questions.splice(id1, 1);\n            }\n            console.log(1, questions);\n\n            state.questions = questions;\n        },\n\n        setPreviousQuestions(state, action) {\n            state.previousQuestions = action.payload;\n        },\n\n        setQuestionnaireId: (state, action) => {\n            state.questionnaireId = action.payload;\n        },\n\n        setBasicInfo: (state, action) => {\n            state.jobId = action.payload.jobId;\n            state.userId = action.payload.userId;\n            state.userType = action.payload.userType;\n        },\n    },\n});\n\nexport const {\n    addQuestion,\n    editQuestion,\n    removeQuestion,\n    setQuestions,\n    rearrangeQuestion,\n    setPreviousQuestions,\n    setQuestionnaireId,\n    setBasicInfo,\n} = screeningSlice.actions;\n\nexport default screeningSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}